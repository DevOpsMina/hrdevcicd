{"version":3,"sources":["../src/htmlParser/comment-node.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,QAAQ,EAAkB,MAAM,aAAa,CAAC;AAEvD;;;;;;;;;GASG;AACH;IAAiC,uCAAQ;IAUxC;;;;OAIG;IACH,qBAAa,GAAsB;QAAnC,YACC,kBAAO,GAAG,CAAE,SAGZ;QAjBD;;;;;WAKG;QACH,aAAO,GAAW,EAAE,CAAC,CAAE,gGAAgG;QAUtH,KAAI,CAAC,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC;;IAC5B,CAAC;IAGD;;;;OAIG;IACH,6BAAO,GAAP;QACC,OAAO,SAAS,CAAC;IAClB,CAAC;IAGD;;;;OAIG;IACH,gCAAU,GAAV;QACC,OAAO,IAAI,CAAC,OAAO,CAAC;IACrB,CAAC;IAEF,kBAAC;AAAD,CAzCA,AAyCC,CAzCgC,QAAQ,GAyCxC","file":"comment-node.js","sourcesContent":["import { HtmlNode, HtmlNodeConfig } from \"./html-node\";\n\n/**\n * @class Autolinker.htmlParser.CommentNode\n * @extends Autolinker.htmlParser.HtmlNode\n *\n * Represents an HTML comment node that has been parsed by the\n * {@link Autolinker.htmlParser.HtmlParser}.\n *\n * See this class's superclass ({@link Autolinker.htmlParser.HtmlNode}) for more\n * details.\n */\nexport class CommentNode extends HtmlNode {\n\n\t/**\n\t * @cfg {String} comment (required)\n\t *\n\t * The text inside the comment tag. This text is stripped of any leading or\n\t * trailing whitespace.\n\t */\n\tcomment: string = '';  // default value just to get the above doc comment in the ES5 output and documentation generator\n\n\t/**\n\t * @method constructor\n\t * @param {Object} cfg The configuration options for this class, specified\n\t *   in an Object.\n\t */\n\tconstructor( cfg: CommentNodeConfig ) {\n\t\tsuper( cfg );\n\n\t\tthis.comment = cfg.comment;\n\t}\n\n\n\t/**\n\t * Returns a string name for the type of node that this class represents.\n\t *\n\t * @return {String}\n\t */\n\tgetType() {\n\t\treturn 'comment';\n\t}\n\n\n\t/**\n\t * Returns the comment inside the comment tag.\n\t *\n\t * @return {String}\n\t */\n\tgetComment() {\n\t\treturn this.comment;\n\t}\n\n}\n\nexport interface CommentNodeConfig extends HtmlNodeConfig {\n\tcomment: string;\n}"]}