{"version":3,"sources":["../src/htmlParser/html-node.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;GAgBG;AACH;IA0BC;;;;OAIG;IACH,kBAAa,GAAmB;QA7BhC;;;;WAIG;QACH,WAAM,GAAW,CAAC,CAAC,CAAE,gGAAgG;QAErH;;;;;;;;;;;;;WAaG;QACH,SAAI,GAAW,EAAE,CAAC,CAAE,gGAAgG;QASnH,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;QACzB,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;IACtB,CAAC;IAYD;;;;;OAKG;IACH,4BAAS,GAAT;QACC,OAAO,IAAI,CAAC,MAAM,CAAC;IACpB,CAAC;IAGD;;;;OAIG;IACH,0BAAO,GAAP;QACC,OAAO,IAAI,CAAC,IAAI,CAAC;IAClB,CAAC;IAEF,eAAC;AAAD,CAlEA,AAkEC,IAAA","file":"html-node.js","sourcesContent":["/**\n * @abstract\n * @class Autolinker.htmlParser.HtmlNode\n *\n * Represents an HTML node found in an input string. An HTML node is one of the\n * following:\n *\n * 1. An {@link Autolinker.htmlParser.ElementNode ElementNode}, which represents\n *    HTML tags.\n * 2. A {@link Autolinker.htmlParser.CommentNode CommentNode}, which represents\n *    HTML comments.\n * 3. A {@link Autolinker.htmlParser.TextNode TextNode}, which represents text\n *    outside or within HTML tags.\n * 4. A {@link Autolinker.htmlParser.EntityNode EntityNode}, which represents\n *    one of the known HTML entities that Autolinker looks for. This includes\n *    common ones such as &amp;quot; and &amp;nbsp;\n */\nexport abstract class HtmlNode {\n\n\t/**\n\t * @cfg {Number} offset (required)\n\t *\n\t * The offset of the HTML node in the original text that was parsed.\n\t */\n\toffset: number = 0;  // default value just to get the above doc comment in the ES5 output and documentation generator\n\n\t/**\n\t * @cfg {String} text (required)\n\t *\n\t * The text that was matched for the HtmlNode.\n\t *\n\t * - In the case of an {@link Autolinker.htmlParser.ElementNode ElementNode},\n\t *   this will be the tag's text.\n\t * - In the case of an {@link Autolinker.htmlParser.CommentNode CommentNode},\n\t *   this will be the comment's text.\n\t * - In the case of a {@link Autolinker.htmlParser.TextNode TextNode}, this\n\t *   will be the text itself.\n\t * - In the case of a {@link Autolinker.htmlParser.EntityNode EntityNode},\n\t *   this will be the text of the HTML entity.\n\t */\n\ttext: string = '';  // default value just to get the above doc comment in the ES5 output and documentation generator\n\n\n\t/**\n\t * @method constructor\n\t * @param {Object} cfg The configuration properties for the Match instance,\n\t * specified in an Object (map).\n\t */\n\tconstructor( cfg: HtmlNodeConfig ) {\n\t\tthis.offset = cfg.offset;\n\t\tthis.text = cfg.text;\n\t}\n\n\n\t/**\n\t * Returns a string name for the type of node that this class represents.\n\t *\n\t * @abstract\n\t * @return {String}\n\t */\n\tabstract getType(): string;\n\n\n\t/**\n\t * Retrieves the {@link #offset} of the HtmlNode. This is the offset of the\n\t * HTML node in the original string that was parsed.\n\t *\n\t * @return {Number}\n\t */\n\tgetOffset() {\n\t\treturn this.offset;\n\t}\n\n\n\t/**\n\t * Retrieves the {@link #text} for the HtmlNode.\n\t *\n\t * @return {String}\n\t */\n\tgetText() {\n\t\treturn this.text;\n\t}\n\n}\n\nexport interface HtmlNodeConfig {\n\toffset: number;\n\ttext: string;\n}"]}